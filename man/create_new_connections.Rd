% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_new_connections.R
\name{create_new_connections}
\alias{create_new_connections}
\title{Create New Connections to Interactive Brokers}
\usage{
create_new_connections(
  number_of_new_socks = 1,
  include_master = FALSE,
  include_tws = FALSE,
  host = active_itr_option(host),
  port = active_itr_option(port)
)
}
\arguments{
\item{number_of_new_socks}{Integer, default = 1. Total number of new connections to open, including Master and TWS (if requested). Interactive Brokers allows a maximum of 32connections open at a time, per username.}

\item{include_master}{Boolean, default = FALSE. If TRUE, then a connection using the
\link{master_client_id}{Master Client ID} will be opened and assigned the
name "**master**".}

\item{include_tws}{Boolean, default = FALSE. If TRUE, then a connection using
\link{client_id_0}{Client ID 0} will be included in the result and assigned
the name "**tws**".}

\item{host}{Character vector of length 1 giving the **hostname** for the session of IB
Gateway or TWS to which the connection(s) should be made. Usually is
"`localhost`" because most users connect to an instance of TWS/IBG that is
running on the same computer as InteractiveTradeR.}

\item{port}{Character vector length 1 or numeric giving the **port number** for the
session of IB Gateway or TWS to which the connection(s) should be made.}
}
\value{
NULL. This function is called for its side effects: opening sockets and
storing pointers that refer to them within InteractiveTradeR.
}
\description{
Creates a specified number of persistent async socket connections to
  Interactive Brokers. Returns them in a list, initialized and ready to send
  and receive data.
}
\details{
**Client IDs** In InteractiveTradeR, Client IDs are not assigned by the user;
instead, they are tracked internally. The user may assign subscriptions and
requests to the \link{master_client_id}{Master Client}, the
\link{client_id_0}{TWS Client}(Client ID = 0) or a generic socket.
}
\seealso{
disconnect
}
