% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/req_mkt_data.R
\name{req_mkt_data}
\alias{req_mkt_data}
\title{Request Market Data}
\usage{
req_mkt_data(
  contract,
  data_name,
  mktDataType = "REALTIME",
  genericTickList = NULL,
  snapshot = TRUE,
  regulatorySnapshot = FALSE,
  channel = NULL
)
}
\arguments{
\item{contract}{Named character vector of contract parameter(s). The name of each element identifies the parameter -- for example, \code{secType}, \code{symbol}, \code{exchange}... -- and each element itself gives the set value (e.g., "STK", "IBM", "SMART"). \cr \cr \strong{The `contract` parameters that may be used with} \code{place_order}() \strong{are}:\cr\code{deltaNeutralContract}, \code{secId}, \code{conId}, \code{comboLegs}, \code{secType}, \code{tradingClass}, \code{symbol}, \code{lastTradeDateOrContractMonth}, \code{strike}, \code{right}, \code{multiplier}, \code{exchange}, \code{primaryExchange}, \code{currency}, \code{localSymbol}, \code{secIdType}\cr \cr See \link{contract} for detailed information on all \code{contract} parameters.}

\item{data_name}{Character vector of length 1. An identifier for the market data subscription.
Good choices could be the contract's symbol, conId, or description (if
combo). All market data received by a mkt_data subscription will be stored in
the \strong{mkt_data} environment under the name \emph{data_name}. Therefore,
no two mkt_data subscriptions may have identical \emph{data_name}s.}

\item{mktDataType}{Either:
\enumerate{
  \item String having one of the following values: "\strong{REALTIME}",
  "\strong{FROZEN}", "\strong{DELAYED}", or "\strong{DELAYED_FROZEN}".
  \item Integer from 1 to 4, inclusive, corresponding respectively to each of
  the above choices (e.g., \code{mktDataType = 3} will set the market data
  type to "\strong{DELAYED}").
}}

\item{genericTickList}{moar biz}

\item{snapshot}{some biz}

\item{regulatorySnapshot}{some other biz}

\item{channel}{One of the following:

\itemize{
  \item \strong{Not Specified} (Default): Opens a new connection to IB, uses
  it to issue the request and retrieve the response, and closes connection
  behind itself upon completion.
  \item \strong{The Name of a Sock}: Character vector, length 1. The name of
  an open, connected socket in the \link{sock_drawer}; e.g., "master", "tws",
  or "sock_123"
  \item \strong{Numeric Client ID}: Numeric, length 1. The client ID for
  which open orders are to be retrieved; e.g., 0, 874, 123. If a client ID is
  passed, and no socket in the \link{sock_drawer} is connected on that ID,
  then a new socket will be opened on that ID, and closed upon function exit.
  \item \strong{A \code{sockconn} Connection}: An open connection object of
  class "sockconn", connected to the IB API; e.g., \code{sock_drawer$tws}
}}
}
\description{
Fetch live (or 15-minute delayed) market data.
}
\details{
attributes `canAutoExecute`, `pastLimit`, `preOpen` are unnecessary in
InteractiveTradeR because you can easily create your own flags that accept
the `trading_floor$pit` data as input. The aren't that much use anyway, and
are mostly holdovers from earlier versions & systems.
}
\seealso{
Other market data: 
\code{\link{cancel_mkt_data}()},
\code{\link{req_market_data_type}()}
}
\concept{market data}
