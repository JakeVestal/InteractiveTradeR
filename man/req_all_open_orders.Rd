% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/req_all_open_orders.R
\name{req_all_open_orders}
\alias{req_all_open_orders}
\title{Request All Open Orders}
\usage{
req_all_open_orders(channel = NULL, return_data = is.null(channel))
}
\arguments{
\item{channel}{One of the following:

\itemize{
  \item \strong{Not Specified} (Default): Opens a new connection to IB, uses
  it to issue the request and retrieve the response, and closes connection
  behind itself upon completion.
  \item \strong{The Name of a Sock}: Character vector, length 1. The name of
  an open, connected socket in the \link{sock_drawer}; e.g., "master", "tws",
  or "sock_123"
  \item \strong{Numeric Client ID}: Numeric, length 1. The client ID for
  which open orders are to be retrieved; e.g., 0, 874, 123. If a client ID is
  passed, and no socket in the \link{sock_drawer} is connected on that ID,
  then a new socket will be opened on that ID, and closed upon function exit.
  \item \strong{A \code{sockconn} Connection}: An open connection object of
  class "sockconn", connected to the IB API; e.g., \code{sock_drawer$tws}
}}

\item{return_data}{Boolean of length 1. Defaults to TRUE unless argument \emph{channel} is
specified. If FALSE, data retrieved by the function will be returned as the
funciton's output. If TRUE, then a Boolean succeses flag will be returned as
the function's output indicating the success (TRUE) or failure (FALSE) of the
function's attempt to transceive data to/from IB. Data in the
\strong{\code{treasury}} is always updated regardless of the value passed as
\emph{return_data} in the function call.}
}
\value{
This function is called for its side effect of updating the
\strong{\code{treasury}}, which takes place every time the function executes.
Additionally, the function's return value depends upon the value passed in as
\emph{return_data} as follows:

\itemize{
  \item \strong{If \code{return_data == FALSE}}: A Boolean success flag,
  returned invisibly, indicating that the function executed correctly and
  updated the \strong{\code{treasury}} with any new data retrieved.
  \item \strong{If \code{return_data == TRUE}}: Any new data retrieved will
  be returned in a \link[tibble]{tibble} in addition to being added to the
  \strong{\code{treasury}}. If no new data is available, returns NULL.
}

\emph{return_data} defaults to TRUE unless \emph{channel} is specified.
}
\description{
Update the \link{treasury}'s \strong{ORDER_STATUSES} and \strong{OPEN_ORDERS}
objects and, optionally, receive list of two \link[tibble]{tibble}s
containing the updated ORDER_STATUS and OPEN_ORDERS objects.
\code{req_all_open_orders}() retreives information about every open order
accessible by your username, regardless of the order's client ID (socket) or
whether it was placed via the API or within the Trader Workstation (TWS).
}
\section{OPEN_ORDERS and ORDER_STATUSES Treasury Objects}{

This function updates the following \link{treasury} objects:

\strong{OPEN_ORDERS} A \link[tibble]{tibble} in which each row represents an
order that, at the time it was last updated, had not fully filled. The column
names are described in the
\href{https://interactivebrokers.github.io/tws-api/classIBApi_1_1Contract.html}{Contract},
\href{https://interactivebrokers.github.io/tws-api/classIBApi_1_1Order.html}{Order},
and
\href{https://interactivebrokers.github.io/tws-api/classIBApi_1_1OrderState.html}{OrderState}
sections of IB's documentation.

\strong{ORDER_STATUSES} A \link[tibble]{tibble} in which each row represents
an order that, at the time it was last updated, had not fully filled. The
column names are described in the
\href{https://interactivebrokers.github.io/tws-api/interfaceIBApi_1_1EWrapper.html#a17f2a02d6449710b6394d0266a353313}{Order
Status} section of IB's documentation.
}

\seealso{
Other orders: 
\code{\link{cancel_order}()},
\code{\link{place_order}()},
\code{\link{req_auto_open_orders}()},
\code{\link{req_completed_orders}()},
\code{\link{req_ids}()},
\code{\link{req_open_orders}()}
}
\concept{orders}
