% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/place_order.R
\name{place_order}
\alias{place_order}
\title{Place Order}
\usage{
place_order(
  contract,
  order,
  deltaNeutralContract = NULL,
  softDollarTier = NULL,
  channel = NULL,
  non_master_override = TRUE
)
}
\arguments{
\item{contract}{Named character vector of contract parameter(s). The name of each element identifies the parameter -- for example, \code{secType}, \code{symbol}, \code{exchange}... -- and each element itself gives the set value (e.g., "STK", "IBM", "SMART"). \cr \cr \strong{The `contract` parameters that may be used with} \code{place_order}() \strong{are}:\cr\code{deltaNeutralContract}, \code{secId}, \code{conId}, \code{comboLegs}, \code{secType}, \code{tradingClass}, \code{symbol}, \code{lastTradeDateOrContractMonth}, \code{strike}, \code{right}, \code{multiplier}, \code{exchange}, \code{primaryExchange}, \code{currency}, \code{localSymbol}, \code{secIdType}\cr \cr See \link{contract} for detailed information on all \code{contract} parameters.}

\item{order}{describe that}

\item{deltaNeutralContract}{that too}

\item{softDollarTier}{and that}

\item{channel}{One of the following:

\itemize{
  \item \strong{Not Specified} (Default): Opens a new connection to IB, uses
  it to issue the request and retrieve the response, and closes connection
  behind itself upon completion.
  \item \strong{The Name of a Sock}: Character vector, length 1. The name of
  an open, connected socket in the \link{sock_drawer}; e.g., "master", "tws",
  or "sock_123"
  \item \strong{Numeric Client ID}: Numeric, length 1. The client ID for
  which open orders are to be retrieved; e.g., 0, 874, 123. If a client ID is
  passed, and no socket in the \link{sock_drawer} is connected on that ID,
  then a new socket will be opened on that ID, and closed upon function exit.
  \item \strong{A \code{sockconn} Connection}: An open connection object of
  class "sockconn", connected to the IB API; e.g., \code{sock_drawer$tws}
}}

\item{non_master_override}{finally that}
}
\description{
Sends an order to IB's servers to buy or sell a financial instrument.
}
\section{Conditional Orders}{

\href{https://www.interactivebrokers.com/en/index.php?f=584}{Conditional
Orders}
}

\section{Bracket Orders}{

\href{https://www.interactivebrokers.com/en/index.php?f=583}{Bracket Orders}
}

\section{Attaching (Hedging) Orders}{

\itemize{
  \item \href{https://www.interactivebrokers.com/en/software/tws/usersguidebook/ordertypes/attach_a_beta_hedge_order.htm}{Beta Hedge}: 
  \item \href{https://www.interactivebrokers.com/en/software/tws/usersguidebook/ordertypes/attach_a_delta_hedge_order.htm}{Delta Hedge}:
  \item \href{https://www.interactivebrokers.com/en/software/tws/usersguidebook/ordertypes/attach_an_fx_order.htm}{FX Order}: 
  \item \href{https://www.interactivebrokers.com/en/software/tws/usersguidebook/ordertypes/attach_a_pair_trade.htm}{Pair Trade}:
  \item \href{https://www.interactivebrokers.com/en/software/tws/usersguidebook/ordertypes/autocombolimit.htm}{Combo Limit}:
  \item \href{https://www.interactivebrokers.com/en/software/tws/usersguidebook/ordertypes/autocombomarket.htm}{Combo Market}:
}
}

\examples{
# 1a) Basic Limit Order for a stock
place_order(
  contract = c(
    symbol   = "IBKR",
    secType  = "STK",
    currency = "USD",
    exchange = "SMART"
  ),
  order    = c(
    action        = "BUY",
    orderType     = "LMT",
    totalQuantity = 1,
    lmtPrice      = 45,
    account       = req_account_summary(tags = "AvailableFunds") \%>\%
      dplyr::filter(as.numeric(tag_value) > 5000) \%>\%
      dplyr::select(account) \%>\%
      unlist(use.names = FALSE) \%>\%
      sample(1)
  )
)

# 1b) Basic Limit Order for a stock's lowest-strike in-the-money call option
place_order(
  contract = c(
    symbol   = "IBKR",
    secType  = "STK",
    currency = "USD",
    exchange = "SMART"
  ),
  order    = c(
    action        = "BUY",
    orderType     = "LMT",
    totalQuantity = 1,
    lmtPrice      = 45,
    account       = req_account_summary(tags = "AvailableFunds") \%>\%
      dplyr::filter(as.numeric(tag_value) > 5000) \%>\%
      dplyr::select(account) \%>\%
      unlist(use.names = FALSE) \%>\%
      sample(1)
  )
)

# 2) Market Combo Order
place_order(
  contract = list(
    symbol    = "IBKR,MCD",
    secType   = "BAG",
    currency  = "USD",
    exchange  = "SMART",
    comboLegs = tibble::tibble(
      conId    = c(43645865, 9408),
      ratio    = c(1,1),
      action   = c("BUY","SELL"),
      exchange = c("SMART", "SMART")
    )
  ),
  order = list(
    action        = "BUY",
    orderType     = "MKT",
    totalQuantity = 1,
    account       = req_account_summary(tags = "AvailableFunds") \%>\%
      dplyr::filter(as.numeric(tag_value) > 5000) \%>\%
      dplyr::select(account) \%>\%
      unlist(use.names = FALSE) \%>\%
      sample(1),
    smartComboRoutingParams = c(NonGuaranteed = 1)
  )
)

### 3) Limit Combo Order, Combo Price Specified
place_order(
  contract = list(
    symbol    = "IBKR,MCD",
    secType   = "BAG",
    currency  = "USD",
    exchange  = "SMART",
    comboLegs = tibble::tibble(
      conId    = c(43645865, 9408),
      ratio    = c(1,1),
      action   = c("BUY","SELL"),
      exchange = c("SMART", "SMART")
    )
  ),
  order = list(
    action        = "BUY",
    orderType     = "LMT",
    lmtPrice      = 150,
    totalQuantity = 1,
    account       = req_account_summary(tags = "AvailableFunds") \%>\%
      dplyr::filter(as.numeric(tag_value) > 5000) \%>\%
      dplyr::select(account) \%>\%
      unlist(use.names = FALSE) \%>\%
      sample(1),
    smartComboRoutingParams = c(NonGuaranteed = 1)
  )
)

### 4) Limit Combo Order, Individual Leg Prices Specified
place_order(
  contract = list(
    symbol    = "IBKR,MCD",
    secType   = "BAG",
    currency  = "USD",
    exchange  = "SMART",
    comboLegs = tibble::tibble(
      conId    = c(43645865, 9408),
      ratio    = c(1,1),
      action   = c("BUY","SELL"),
      exchange = c("SMART", "SMART")
    )
  ),
  order = list(
    action         = "BUY",
    orderType      = "LMT",
    orderComboLegs = c(45,210),
    totalQuantity  = 1,
    account        = req_account_summary(tags = "AvailableFunds") \%>\%
      dplyr::filter(as.numeric(tag_value) > 5000) \%>\%
      dplyr::select(account) \%>\%
      unlist(use.names = FALSE) \%>\%
      sample(1),
    smartComboRoutingParams = c(NonGuaranteed = 1)
  )
)

### 5) Delta Neutral Order
place_order(
  contract = list(
    symbol     = "GOOG",
    secType    = "OPT",
    currency   = "USD",
    exchange   = "SMART",
    right      = "C",
    multiplier = 100,
    strike     = 1170
  ),
  order = list(
    action         = "BUY",
    orderType      = "MKT",
    totalQuantity  = 1,
    account        = req_account_summary(tags = "AvailableFunds") \%>\%
      dplyr::filter(as.numeric(tag_value) > 5000) \%>\%
      dplyr::select(account) \%>\%
      unlist(use.names = FALSE) \%>\%
      sample(1)
  )
)
}
\concept{orders}
