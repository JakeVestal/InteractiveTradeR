% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/req_sec_def_opt_params.R
\name{req_sec_def_opt_params}
\alias{req_sec_def_opt_params}
\title{Request Option Parameters (strike, expiry, etc) by Security}
\usage{
req_sec_def_opt_params(
  underlyingSymbol = "",
  futFopExchange = "",
  underlyingSecType = "",
  underlyingConId = "",
  channel = NULL
)
}
\arguments{
\item{underlyingSymbol}{Character, length 1. Symbol of the underlying contract, e.g., "AAPL".}

\item{futFopExchange}{Character, length 1. Exchange where fetched options trade, e.g., "NASDAQOM"}

\item{underlyingSecType}{Character, length 1. The type of the underlying security. See \emph{SecType}
in the \link{contract} documentation.}

\item{underlyingConId}{Character or numeric, length 1. The \code{conId} of the underlying contract.}

\item{channel}{One of the following:

\itemize{
  \item \strong{Not Specified} (Default): Opens a new connection to IB, uses
  it to issue the request and retrieve the response, and closes connection
  behind itself upon completion.
  \item \strong{The Name of a Sock}: Character vector, length 1. The name of
  an open, connected socket in the \link{sock_drawer}; e.g., "master", "tws",
  or "sock_123"
  \item \strong{Numeric Client ID}: Numeric, length 1. The client ID for
  which open orders are to be retrieved; e.g., 0, 874, 123. If a client ID is
  passed, and no socket in the \link{sock_drawer} is connected on that ID,
  then a new socket will be opened on that ID, and closed upon function exit.
  \item \strong{A \code{sockconn} Connection}: An open connection object of
  class "sockconn", connected to the IB API; e.g., \code{sock_drawer$tws}
}}
}
\value{
A 1-row \link[tibble]{tibble} with the following columns:
\itemize{
  \item \strong{exchange} <chr>: See \link{contract}
  \item \strong{underlyingConId} <numeric>: Unique numeric \code{conId} of
  underlying contract; See \link{contract}
  \item \strong{tradingClass} <chr>: See \link{contract}
  \item \strong{multiplier} <numeric>: See \link{contract}
  \item \strong{expirations} <list of POSIXt Date Objects>: Expiry dates of
  put & call options traded on \code{exchange} for the contract whose
  \code{conId} is passed as argument \code{underlyingConId}
  \item \strong{expirations} <list of Numeric Objects>: Strike prices of put
  & call options traded on \code{exchange} for the contract whose
  \code{conId} is passed as argument \code{underlyingConId}
}
}
\description{
Use this function to request the strike prices and expiry dates for options
that are available for a specified underlying contract. While the same
information could be obtained via \link{req_contract_details}(),
\code{req_sec_def_opt_param}() is not subject to data pacing (throttling) and
is optimized for retreiving strike prices & expiry dates.
}
\examples{
# Query Option Parameters for IBM Stock
ibm_opt_params <- req_sec_def_opt_params(
  underlyingSymbol  = "IBM",
  underlyingSecType = "STK",
  underlyingConId   = 8314
)

# Print the params:
ibm_opt_params

# Print just the strike prices:
ibm_opt_params$strikes

# median strike price:
median(ibm_opt_params$strikes[[1]])

# Print just the expirations:
ibm_opt_params$expirations

# Find latest expiration:
max(ibm_opt_params$expirations[[1]])
}
\seealso{
Other asset info: 
\code{\link{req_contract_details}()},
\code{\link{req_matching_symbols}()}
}
\concept{asset info}
